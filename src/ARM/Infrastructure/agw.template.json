{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "applicationGatewayName": {
      "type": "string"
    },
    "tier": {
      "type": "string"
    },
    "skuSize": {
      "type": "string"
    },
    "tagsArray": {
      "type": "object"
    },
    "capacity": {
      "type": "int",
      "defaultValue": 2
    },
    "subnetName": {
      "type": "string"
    },
    "fqdnname": {
      "type": "string"
    },
    "apigatewayhostname": {
      "type": "string"
    },
    "apigatewayhostname-io": {
      "type": "string"
    },
    "amnoneapigatewayhostname": {
      "type": "string"
    },
    "amnoneapigatewayhostnameio": {
      "type": "string"
    },
    "matchapigatewayhostname": {
      "type": "string"
    },
    "amnone-ats-apigatewayhostname": {
      "type": "string"
    },
    "medefis-apigatewayhostname": {
      "type": "string"
    },
    "requesttimeout": {
      "type": "string"
    },
    "zones": {
      "type": "array"
    },
    "privateIpAddress": {
      "type": "string"
    },
    "managedIdentity": {
      "type": "string"
    },
    "virtualnetworkname": {
      "type": "string"
    },
    "publicIPAddressesName": {
      "type": "string"
    },
    "vaultResourceGroupName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "ttm_sslCertName": {
      "type": "string"
    },
    "amnonesslCertName": {
      "type": "string"
    },
    "amnonesslCertNameio": {
      "type": "string"
    },
    "medefissslCertNameio": {
      "type": "string"
    },
    "resourceid": {
      "type": "String"
    },
    "settingName": {
      "type": "String"
    },
    "autoScaleMaxCapacity": {
      "type": "int"
    }
  },
  "variables": {
    "vnetId": "[concat(resourceGroup().id, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualnetworkname'))]",
    "publicIPRef": "[concat(resourceGroup().id, '/providers/Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressesName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]",
    "ttm_sslCertName": "[resourceId(subscription().subscriptionId, parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('ttm_sslCertName'))]",
    "amnonesecretResourceId": "[resourceId(subscription().subscriptionId, parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('amnonesslCertName'))]",
    "medefissecretResourceIdio": "[resourceId(subscription().subscriptionId, parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('medefissslCertNameio'))]",
    "amnonesecretResourceIdio": "[resourceId(subscription().subscriptionId, parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('amnonesslCertNameio'))]",

    "useridentity": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vaultResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('managedIdentity'))]"

  },
    "resources": [
        {
            "name": "[parameters('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "resources": [
                {
                    "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat(parameters('applicationGatewayName'),'/microsoft.insights/', parameters('settingName'))]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/applicationGateways/', parameters('applicationGatewayName'))]"
                    ],
                    "properties": {
                        "name": "[parameters('settingName')]",
                        "workspaceId": "[parameters('resourceid')]",
                        "logs": [
                            {
                                "category": "ApplicationGatewayAccessLog",
                                "enabled": true
                            },
                            {
                                "category": "ApplicationGatewayPerformanceLog",
                                "enabled": true
                            },
                            {
                                "category": "ApplicationGatewayFirewallLog",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    }
                }
            ],
            "zones": "[parameters('zones')]",
            "dependsOn": [],
            "tags": "[parameters('tagsArray')]",
            "properties": {
                "sku": {
                    "name": "[parameters('skuSize')]",
                    "tier": "[parameters('tier')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
              "sslCertificates": [
                {
                  "name": "amnone-api-https-listener",
                  "properties": {
                    "keyVaultSecretId": "[concat(reference(variables('amnonesecretResourceId'), '2018-02-14').secretUriWithVersion)]"
                  }
                },
                {
                  "name": "amnone-api-https-listener-io",
                  "properties": {
                    "keyVaultSecretId": "[concat(reference(variables('amnonesecretResourceIdio'), '2018-02-14').secretUriWithVersion)]"
                  }
                },
                {
                  "name": "medefis-api-https-listener-io",
                  "properties": {
                    "keyVaultSecretId": "[concat(reference(variables('medefissecretResourceIdio'), '2018-02-14').secretUriWithVersion)]"
                  }
                },
                {
                  "name": "ttm-api-https-listener",
                  "properties": {
                    "keyVaultSecretId": "[concat(reference(variables('ttm_sslCertName'), '2018-02-14').secretUriWithVersion)]"
                  }
                }
              ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('publicIPRef')]"
                            }
                        }
                    },
                    {
                        "name": "appGwPrivateFrontendIp",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAddress": "[parameters('privateIpAddress')]",
                            "privateIPAllocationMethod": "Static"
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    },
                    {
                        "name": "port_443",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "apim-pool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[parameters('fqdnname')]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "apim-port-443-http-setting",
                        "properties": {
                            "Port": 443,
                            "Protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": "[parameters('requesttimeout')]",
                            "pickHostNameFromBackendAddress": true,
                            "probe": {
                                "id": "[concat(variables('applicationGatewayId'), '/probes/apim-backend-probe')]"
                            }
                        }
                    }
                ],
              "httpListeners": [
                {
                  "name": "public-https-listener",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                    },
                    "frontendPort": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                    },
                    "protocol": "Https",
                    "sslCertificate": {
                      "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/ttm-api-https-listener')]"
                    },
                    "hostName": "[parameters('apigatewayhostname')]",
                    "requireServerNameIndication": true
                  }
                },
                {
                  "name": "public-https-listener-io",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                    },
                    "frontendPort": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                    },
                    "protocol": "Https",
                    "sslCertificate": {
                      "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/amnone-api-https-listener-io')]"
                    },
                    "hostName": "[parameters('apigatewayhostname-io')]",
                    "requireServerNameIndication": true
                  }
                },
                {
                  "name": "amnone-api-https-listener",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                    },
                    "frontendPort": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                    },
                    "protocol": "Https",
                    "sslCertificate": {
                      "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/amnone-api-https-listener')]"
                    },
                    "hostName": "[parameters('amnoneapigatewayhostname')]",
                    "requireServerNameIndication": true
                  }
                },
                {
                  "name": "amnone-api-https-listener-io",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                    },
                    "frontendPort": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                    },
                    "protocol": "Https",
                    "sslCertificate": {
                      "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/amnone-api-https-listener-io')]"
                    },
                    "hostName": "[parameters('amnoneapigatewayhostnameio')]",
                    "requireServerNameIndication": true
                  }
                },
                {
                  "name": "match-api-https-listener",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                    },
                    "frontendPort": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                    },
                    "protocol": "Https",
                    "sslCertificate": {
                      "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/amnone-api-https-listener-io')]"
                    },
                    "hostName": "[parameters('matchapigatewayhostname')]",
                    "requireServerNameIndication": true
                  }
                },
                {
                  "name": "amnone-ats-api-https-listener",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                    },
                    "frontendPort": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                    },
                    "protocol": "Https",
                    "sslCertificate": {
                      "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/amnone-api-https-listener-io')]"
                    },
                    "hostName": "[parameters('amnone-ats-apigatewayhostname')]",
                    "requireServerNameIndication": true
                  }
                },
                {
                  "name": "medefis-api-https-listener",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                    },
                    "frontendPort": {
                      "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                    },
                    "protocol": "Https",
                    "sslCertificate": {
                      "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/medefis-api-https-listener-io')]"
                    },
                    "hostName": "[parameters('medefis-apigatewayhostname')]",
                    "requireServerNameIndication": true
                  }
                }
              ],
              "requestRoutingRules": [
                {
                  "Name": "ttm-apis-routing-rule",
                  "properties": {
                    "ruleType": "PathBasedRouting",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayId'), '/httpListeners/public-https-listener')]"
                    },
                    "urlPathMap": {
                      "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/ttm-apis-routing-rule')]"
                    }
                  }
                },
                {
                  "Name": "ttm-apis-routing-rule-io",
                  "properties": {
                    "ruleType": "PathBasedRouting",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayId'), '/httpListeners/public-https-listener-io')]"
                    },
                    "urlPathMap": {
                      "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/ttm-apis-routing-rule')]"
                    }
                  }
                },
                {
                  "Name": "amnone-apis-routing-rule",
                  "properties": {
                    "ruleType": "PathBasedRouting",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayId'), '/httpListeners/amnone-api-https-listener')]"
                    },
                    "urlPathMap": {
                      "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/amnone-apis-routing-rule')]"
                    }
                  }
                },
                {
                  "Name": "amnone-apis-routing-rule-io",
                  "properties": {
                    "ruleType": "PathBasedRouting",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayId'), '/httpListeners/amnone-api-https-listener-io')]"
                    },
                    "urlPathMap": {
                      "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/amnone-apis-routing-rule-io')]"
                    }
                  }
                },
                {
                  "Name": "match-apis-routing-rule",
                  "properties": {
                    "ruleType": "PathBasedRouting",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayId'), '/httpListeners/match-api-https-listener')]"
                    },
                    "urlPathMap": {
                      "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/match-apis-routing-rule')]"
                    }
                  }
                },
                {
                  "Name": "amnone-ats-apis-routing-rule",
                  "properties": {
                    "ruleType": "PathBasedRouting",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayId'), '/httpListeners/amnone-ats-api-https-listener')]"
                    },
                    "urlPathMap": {
                      "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/amnone-ats-apis-routing-rule')]"
                    }
                  }
                },
                {
                  "Name": "medefis-apis-routing-rule",
                  "properties": {
                    "ruleType": "PathBasedRouting",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayId'), '/httpListeners/medefis-api-https-listener')]"
                    },
                    "urlPathMap": {
                      "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/medefis-apis-routing-rule')]"
                    }
                  }
                }
              ],
                "enableHttp2": false,
                "sslPolicy": {
                    "policyType": "Predefined",
                    "policyName": "AppGwSslPolicy20170401S"
                },

                "probes": [
                    {
                        "name": "apim-backend-probe",
                        "properties": {
                            "protocol": "Https",
                            "path": "/status-0123456789abcdef",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {}
                        }
                    }
                ],
                "autoscaleConfiguration": {
                    "minCapacity": "[parameters('capacity')]",
                    "maxCapacity": "[parameters('autoScaleMaxCapacity')]"
                },
              "urlPathMaps": [
                {
                  "name": "ttm-apis-routing-rule",
                  "properties": {
                    "pathRules": [
                      {
                        "name": "ttm-api-target",
                        "properties": {
                          "paths": [
                            "/*"
                          ],
                          "backendAddressPool": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                          },
                          "backendHttpSettings": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                          }
                        }
                      }
                    ],
                    "defaultBackendAddressPool": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                    },
                    "defaultBackendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                    }
                  }
                },
                {
                  "name": "amnone-apis-routing-rule",
                  "properties": {
                    "pathRules": [
                      {
                        "name": "amnone-apis-target",
                        "properties": {
                          "paths": [
                            "/*"
                          ],
                          "backendAddressPool": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                          },
                          "backendHttpSettings": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                          }
                        }
                      }
                    ],
                    "defaultBackendAddressPool": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                    },
                    "defaultBackendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                    }
                  }
                },
                {
                  "name": "amnone-apis-routing-rule-io",
                  "properties": {
                    "pathRules": [
                      {
                        "name": "amnone-apis-target-io",
                        "properties": {
                          "paths": [
                            "/*"
                          ],
                          "backendAddressPool": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                          },
                          "backendHttpSettings": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                          }
                        }
                      }
                    ],
                    "defaultBackendAddressPool": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                    },
                    "defaultBackendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                    }
                  }
                },
                {
                  "name": "match-apis-routing-rule",
                  "properties": {
                    "pathRules": [
                      {
                        "name": "match-apis-target",
                        "properties": {
                          "paths": [
                            "/*"
                          ],
                          "backendAddressPool": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                          },
                          "backendHttpSettings": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                          }
                        }
                      }
                    ],
                    "defaultBackendAddressPool": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                    },
                    "defaultBackendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                    }
                  }
                },
                {
                  "name": "amnone-ats-apis-routing-rule",
                  "properties": {
                    "pathRules": [
                      {
                        "name": "amnone-ats-apis-target",
                        "properties": {
                          "paths": [
                            "/imatch/*",
                            "/ipreference/*"
                          ],
                          "backendAddressPool": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                          },
                          "backendHttpSettings": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                          }
                        }
                      }
                    ],
                    "defaultBackendAddressPool": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                    },
                    "defaultBackendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                    }
                  }
                },
                {
                  "name": "medefis-apis-routing-rule",
                  "properties": {
                    "pathRules": [
                      {
                        "name": "medefis-apis-target",
                        "properties": {
                          "paths": [
                            "/mdf-vms/*",
                            "/mdf-agency/*"
                          ],
                          "backendAddressPool": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                          },
                          "backendHttpSettings": {
                            "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                          }
                        }
                      }
                    ],
                    "defaultBackendAddressPool": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/apim-pool')]"
                    },
                    "defaultBackendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/apim-port-443-http-setting')]"
                    }
                  }
                }
              ]
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('useridentity')]": {}
                }
            }
        }
    ]
}