{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Storage Account"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Specifies tags, if any, for this resource."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Sku for the Storage Account"
      }
    },
    "containerNameList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List containing the container names."
      }
    },
    "kvName": {
      "type": "string",
      "metadata": {
        "description": "Name of the KeyVault"
      }
    },
    "keySecretName": {
      "type": "string",
      "metadata": {
        "description": "Name for the Storage Acct Key in KeyVault"
      }
    },
    "endpointSecretName": {
      "type": "string",
      "metadata": {
        "description": "Name for the Storage Acct Endpoint in KeyVault"
      }
    }
  },
  "variables": {
    "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[if(empty(parameters('tags')), json('null'), parameters('tags'))]",
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "Standard"
      },
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('name'), '/default/', parameters('containerNameList')[copyIndex()])]",
      "copy": {
        "name": "containercopy",
        "count": "[length(parameters('containerNameList'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('kvName'),'/',parameters('keySecretName'))]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[variables('resourceId')]"
      ],
      "properties": {
        "value": "[listKeys(variables('resourceId'), '2019-06-01').keys[0].value]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('kvName'),'/',parameters('endpointSecretName'))]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[variables('resourceId')]"
      ],
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2019-06-01').keys[0].value)]"
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('name')]"
    }
  }
}
